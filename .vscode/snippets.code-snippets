{
	// Place your SR-espa1 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"js log to console": {
			"scope": "javascript,typescript",
			"prefix": "log",
			"body": [
				"console.log('$1');",
				"$2"
			],
			"description": "Log output to console"
		},
	"Elm log to console": {
		"scope": "elm",
		"prefix": "log",
		"body": [
			"_ = Debug.log \"$1\" $2"
		],
		"description": "Log output to console"
	}
	,
	"Elm let and log to console": {
		"scope": "elm",
		"prefix": "let-log",
		"body": [
			"let _ = Debug.log \"$1\" \"$2\"  in"
		],
		"description": "Let and log output to console"
	}
	,
	"Pick a spec test": {
		"scope": "elm",
		"prefix": "pick",
		"body": [
			"BddStepDefinitions.Runner.pick <|"
		],
		"description": "Pick a spec test"
	},
	"Skip a spec test": {
		"scope": "elm",
		"prefix": "skip",
		"body": [
			"BddStepDefinitions.Runner.skip <|"
		],
		"description": "Skip a spec test"
	}
}