{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.PaymentAccountForm.FormId exposing (FormId(..), decodeFormId, defaultFormId, encodeFormId, fieldNumbersFormId)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `pb.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

@docs FormId, decodeFormId, defaultFormId, encodeFormId, fieldNumbersFormId

-}

import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `FormId`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersFormId : FormId -> Int
fieldNumbersFormId n_ =
    case n_ of
        BLOCKCHAINS ->
            0

        REVOLUT ->
            1

        SEPA ->
            2

        SEPAINSTANT ->
            3

        TRANSFERWISE ->
            4

        ZELLE ->
            5

        SWIFT ->
            6

        F2F ->
            7

        STRIKE ->
            8

        MONEYGRAM ->
            9

        FASTERPAYMENTS ->
            10

        UPHOLD ->
            11

        PAXUM ->
            12

        PAYBYMAIL ->
            13

        CASHATATM ->
            14

        AUSTRALIAPAYID ->
            15

        CASHAPP ->
            16

        PAYPAL ->
            17

        VENMO ->
            18

        FormIdUnrecognized_ m_ ->
            m_


{-| Default for FormId. Should only be used for 'required' decoders as an initial value.

-}
defaultFormId : FormId
defaultFormId =
    BLOCKCHAINS


{-| Declares how to encode a `FormId` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeFormId : FormId -> Protobuf.Encode.Encoder
encodeFormId value =
    Protobuf.Encode.int32 <|
        case value of
            BLOCKCHAINS ->
                0

            REVOLUT ->
                1

            SEPA ->
                2

            SEPAINSTANT ->
                3

            TRANSFERWISE ->
                4

            ZELLE ->
                5

            SWIFT ->
                6

            F2F ->
                7

            STRIKE ->
                8

            MONEYGRAM ->
                9

            FASTERPAYMENTS ->
                10

            UPHOLD ->
                11

            PAXUM ->
                12

            PAYBYMAIL ->
                13

            CASHATATM ->
                14

            AUSTRALIAPAYID ->
                15

            CASHAPP ->
                16

            PAYPAL ->
                17

            VENMO ->
                18

            FormIdUnrecognized_ i ->
                i


{-| Declares how to decode a `FormId` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeFormId : Protobuf.Decode.Decoder FormId
decodeFormId =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        BLOCKCHAINS

                    1 ->
                        REVOLUT

                    2 ->
                        SEPA

                    3 ->
                        SEPAINSTANT

                    4 ->
                        TRANSFERWISE

                    5 ->
                        ZELLE

                    6 ->
                        SWIFT

                    7 ->
                        F2F

                    8 ->
                        STRIKE

                    9 ->
                        MONEYGRAM

                    10 ->
                        FASTERPAYMENTS

                    11 ->
                        UPHOLD

                    12 ->
                        PAXUM

                    13 ->
                        PAYBYMAIL

                    14 ->
                        CASHATATM

                    15 ->
                        AUSTRALIAPAYID

                    16 ->
                        CASHAPP

                    17 ->
                        PAYPAL

                    18 ->
                        VENMO

                    _ ->
                        FormIdUnrecognized_ i
            )


{-| `FormId` enumeration

-}
type FormId
    = BLOCKCHAINS
    | REVOLUT
    | SEPA
    | SEPAINSTANT
    | TRANSFERWISE
    | ZELLE
    | SWIFT
    | F2F
    | STRIKE
    | MONEYGRAM
    | FASTERPAYMENTS
    | UPHOLD
    | PAXUM
    | PAYBYMAIL
    | CASHATATM
    | AUSTRALIAPAYID
    | CASHAPP
    | PAYPAL
    | VENMO
    | FormIdUnrecognized_ Int
