{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.Trades exposing (completeTrade, confirmPaymentReceived, confirmPaymentSent, getChatMessages, getTrade, getTrades, sendChatMessage, takeOffer, withdrawFunds)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `grpc.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

/////////////////////////////////////////////////////////////////////////////////////////
 Trades
/////////////////////////////////////////////////////////////////////////////////////////


@docs completeTrade, confirmPaymentReceived, confirmPaymentSent, getChatMessages, getTrade, getTrades, sendChatMessage, takeOffer

@docs withdrawFunds

-}

import Grpc.Internal
import Proto.Io.Haveno.Protobuffer


{-| A template for a gRPC call to the method 'SendChatMessage' sending a `SendChatMessageRequest` to get back a `SendChatMessageReply`.

-}
sendChatMessage :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.SendChatMessageRequest Proto.Io.Haveno.Protobuffer.SendChatMessageReply
sendChatMessage =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "SendChatMessage"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeSendChatMessageRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeSendChatMessageReply
        }


{-| A template for a gRPC call to the method 'GetChatMessages' sending a `GetChatMessagesRequest` to get back a `GetChatMessagesReply`.

-}
getChatMessages :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetChatMessagesRequest Proto.Io.Haveno.Protobuffer.GetChatMessagesReply
getChatMessages =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetChatMessages"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetChatMessagesRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetChatMessagesReply
        }


{-| A template for a gRPC call to the method 'WithdrawFunds' sending a `WithdrawFundsRequest` to get back a `WithdrawFundsReply`.

-}
withdrawFunds :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.WithdrawFundsRequest Proto.Io.Haveno.Protobuffer.WithdrawFundsReply
withdrawFunds =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "WithdrawFunds"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeWithdrawFundsRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeWithdrawFundsReply
        }


{-| A template for a gRPC call to the method 'CompleteTrade' sending a `CompleteTradeRequest` to get back a `CompleteTradeReply`.

-}
completeTrade :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.CompleteTradeRequest Proto.Io.Haveno.Protobuffer.CompleteTradeReply
completeTrade =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "CompleteTrade"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeCompleteTradeRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeCompleteTradeReply
        }


{-| A template for a gRPC call to the method 'ConfirmPaymentReceived' sending a `ConfirmPaymentReceivedRequest` to get back a `ConfirmPaymentReceivedReply`.

-}
confirmPaymentReceived :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.ConfirmPaymentReceivedRequest Proto.Io.Haveno.Protobuffer.ConfirmPaymentReceivedReply
confirmPaymentReceived =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "ConfirmPaymentReceived"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeConfirmPaymentReceivedRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeConfirmPaymentReceivedReply
        }


{-| A template for a gRPC call to the method 'ConfirmPaymentSent' sending a `ConfirmPaymentSentRequest` to get back a `ConfirmPaymentSentReply`.

-}
confirmPaymentSent :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.ConfirmPaymentSentRequest Proto.Io.Haveno.Protobuffer.ConfirmPaymentSentReply
confirmPaymentSent =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "ConfirmPaymentSent"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeConfirmPaymentSentRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeConfirmPaymentSentReply
        }


{-| A template for a gRPC call to the method 'TakeOffer' sending a `TakeOfferRequest` to get back a `TakeOfferReply`.

-}
takeOffer : Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.TakeOfferRequest Proto.Io.Haveno.Protobuffer.TakeOfferReply
takeOffer =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "TakeOffer"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeTakeOfferRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeTakeOfferReply
        }


{-| A template for a gRPC call to the method 'GetTrades' sending a `GetTradesRequest` to get back a `GetTradesReply`.

-}
getTrades : Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetTradesRequest Proto.Io.Haveno.Protobuffer.GetTradesReply
getTrades =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetTrades"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetTradesRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetTradesReply
        }


{-| A template for a gRPC call to the method 'GetTrade' sending a `GetTradeRequest` to get back a `GetTradeReply`.

-}
getTrade : Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetTradeRequest Proto.Io.Haveno.Protobuffer.GetTradeReply
getTrade =
    Grpc.Internal.Rpc
        { service = "Trades"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetTrade"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetTradeRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetTradeReply
        }
