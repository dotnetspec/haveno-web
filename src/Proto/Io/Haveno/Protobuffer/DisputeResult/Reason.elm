{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.DisputeResult.Reason exposing (Reason(..), decodeReason, defaultReason, encodeReason, fieldNumbersReason)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `pb.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

@docs Reason, decodeReason, defaultReason, encodeReason, fieldNumbersReason

-}

import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `Reason`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersReason : Reason -> Int
fieldNumbersReason n_ =
    case n_ of
        PBERRORREASON ->
            0

        OTHER ->
            1

        BUG ->
            2

        USABILITY ->
            3

        SCAM ->
            4

        PROTOCOLVIOLATION ->
            5

        NOREPLY ->
            6

        BANKPROBLEMS ->
            7

        OPTIONTRADE ->
            8

        SELLERNOTRESPONDING ->
            9

        WRONGSENDERACCOUNT ->
            10

        TRADEALREADYSETTLED ->
            11

        PEERWASLATE ->
            12

        ReasonUnrecognized_ m_ ->
            m_


{-| Default for Reason. Should only be used for 'required' decoders as an initial value.

-}
defaultReason : Reason
defaultReason =
    PBERRORREASON


{-| Declares how to encode a `Reason` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeReason : Reason -> Protobuf.Encode.Encoder
encodeReason value =
    Protobuf.Encode.int32 <|
        case value of
            PBERRORREASON ->
                0

            OTHER ->
                1

            BUG ->
                2

            USABILITY ->
                3

            SCAM ->
                4

            PROTOCOLVIOLATION ->
                5

            NOREPLY ->
                6

            BANKPROBLEMS ->
                7

            OPTIONTRADE ->
                8

            SELLERNOTRESPONDING ->
                9

            WRONGSENDERACCOUNT ->
                10

            TRADEALREADYSETTLED ->
                11

            PEERWASLATE ->
                12

            ReasonUnrecognized_ i ->
                i


{-| Declares how to decode a `Reason` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeReason : Protobuf.Decode.Decoder Reason
decodeReason =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        PBERRORREASON

                    1 ->
                        OTHER

                    2 ->
                        BUG

                    3 ->
                        USABILITY

                    4 ->
                        SCAM

                    5 ->
                        PROTOCOLVIOLATION

                    6 ->
                        NOREPLY

                    7 ->
                        BANKPROBLEMS

                    8 ->
                        OPTIONTRADE

                    9 ->
                        SELLERNOTRESPONDING

                    10 ->
                        WRONGSENDERACCOUNT

                    11 ->
                        TRADEALREADYSETTLED

                    12 ->
                        PEERWASLATE

                    _ ->
                        ReasonUnrecognized_ i
            )


{-| `Reason` enumeration

-}
type Reason
    = PBERRORREASON
    | OTHER
    | BUG
    | USABILITY
    | SCAM
    | PROTOCOLVIOLATION
    | NOREPLY
    | BANKPROBLEMS
    | OPTIONTRADE
    | SELLERNOTRESPONDING
    | WRONGSENDERACCOUNT
    | TRADEALREADYSETTLED
    | PEERWASLATE
    | ReasonUnrecognized_ Int
