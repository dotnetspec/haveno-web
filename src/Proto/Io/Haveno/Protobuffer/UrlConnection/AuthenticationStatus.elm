{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.UrlConnection.AuthenticationStatus exposing (AuthenticationStatus(..), decodeAuthenticationStatus, defaultAuthenticationStatus, encodeAuthenticationStatus, fieldNumbersAuthenticationStatus)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `grpc.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

@docs AuthenticationStatus, decodeAuthenticationStatus, defaultAuthenticationStatus, encodeAuthenticationStatus

@docs fieldNumbersAuthenticationStatus

-}

import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `AuthenticationStatus`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersAuthenticationStatus : AuthenticationStatus -> Int
fieldNumbersAuthenticationStatus n_ =
    case n_ of
        NOAUTHENTICATION ->
            0

        AUTHENTICATED ->
            1

        NOTAUTHENTICATED ->
            2

        AuthenticationStatusUnrecognized_ m_ ->
            m_


{-| Default for AuthenticationStatus. Should only be used for 'required' decoders as an initial value.

-}
defaultAuthenticationStatus : AuthenticationStatus
defaultAuthenticationStatus =
    NOAUTHENTICATION


{-| Declares how to encode a `AuthenticationStatus` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeAuthenticationStatus : AuthenticationStatus -> Protobuf.Encode.Encoder
encodeAuthenticationStatus value =
    Protobuf.Encode.int32 <|
        case value of
            NOAUTHENTICATION ->
                0

            AUTHENTICATED ->
                1

            NOTAUTHENTICATED ->
                2

            AuthenticationStatusUnrecognized_ i ->
                i


{-| Declares how to decode a `AuthenticationStatus` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeAuthenticationStatus : Protobuf.Decode.Decoder AuthenticationStatus
decodeAuthenticationStatus =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        NOAUTHENTICATION

                    1 ->
                        AUTHENTICATED

                    2 ->
                        NOTAUTHENTICATED

                    _ ->
                        AuthenticationStatusUnrecognized_ i
            )


{-| `AuthenticationStatus` enumeration

-}
type AuthenticationStatus
    = NOAUTHENTICATION
    | AUTHENTICATED
    | NOTAUTHENTICATED
    | AuthenticationStatusUnrecognized_ Int
