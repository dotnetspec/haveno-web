{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.OfferDirection exposing (OfferDirection(..), decodeOfferDirection, defaultOfferDirection, encodeOfferDirection, fieldNumbersOfferDirection)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `pb.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

@docs OfferDirection, decodeOfferDirection, defaultOfferDirection, encodeOfferDirection, fieldNumbersOfferDirection

-}

import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `OfferDirection`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersOfferDirection : OfferDirection -> Int
fieldNumbersOfferDirection n_ =
    case n_ of
        OFFERDIRECTIONUNDEFINED ->
            0

        BUY ->
            1

        SELL ->
            2

        OfferDirectionUnrecognized_ m_ ->
            m_


{-| Default for OfferDirection. Should only be used for 'required' decoders as an initial value.

-}
defaultOfferDirection : OfferDirection
defaultOfferDirection =
    OFFERDIRECTIONUNDEFINED


{-| Declares how to encode a `OfferDirection` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeOfferDirection : OfferDirection -> Protobuf.Encode.Encoder
encodeOfferDirection value =
    Protobuf.Encode.int32 <|
        case value of
            OFFERDIRECTIONUNDEFINED ->
                0

            BUY ->
                1

            SELL ->
                2

            OfferDirectionUnrecognized_ i ->
                i


{-| Declares how to decode a `OfferDirection` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeOfferDirection : Protobuf.Decode.Decoder OfferDirection
decodeOfferDirection =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        OFFERDIRECTIONUNDEFINED

                    1 ->
                        BUY

                    2 ->
                        SELL

                    _ ->
                        OfferDirectionUnrecognized_ i
            )


{-| `OfferDirection` enumeration

-}
type OfferDirection
    = OFFERDIRECTIONUNDEFINED
    | BUY
    | SELL
    | OfferDirectionUnrecognized_ Int
