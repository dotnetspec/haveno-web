{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.RefundResultState exposing (RefundResultState(..), decodeRefundResultState, defaultRefundResultState, encodeRefundResultState, fieldNumbersRefundResultState)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `pb.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

@docs RefundResultState, decodeRefundResultState, defaultRefundResultState, encodeRefundResultState, fieldNumbersRefundResultState

-}

import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `RefundResultState`. This is mostly useful for internals, like documentation generation.

-}
fieldNumbersRefundResultState : RefundResultState -> Int
fieldNumbersRefundResultState n_ =
    case n_ of
        PBERRORREFUNDRESULT ->
            0

        UNDEFINEDREFUNDRESULT ->
            1

        RefundResultStateUnrecognized_ m_ ->
            m_


{-| Default for RefundResultState. Should only be used for 'required' decoders as an initial value.

-}
defaultRefundResultState : RefundResultState
defaultRefundResultState =
    PBERRORREFUNDRESULT


{-| Declares how to encode a `RefundResultState` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.

-}
encodeRefundResultState : RefundResultState -> Protobuf.Encode.Encoder
encodeRefundResultState value =
    Protobuf.Encode.int32 <|
        case value of
            PBERRORREFUNDRESULT ->
                0

            UNDEFINEDREFUNDRESULT ->
                1

            RefundResultStateUnrecognized_ i ->
                i


{-| Declares how to decode a `RefundResultState` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.

-}
decodeRefundResultState : Protobuf.Decode.Decoder RefundResultState
decodeRefundResultState =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        PBERRORREFUNDRESULT

                    1 ->
                        UNDEFINEDREFUNDRESULT

                    _ ->
                        RefundResultStateUnrecognized_ i
            )


{-| `RefundResultState` enumeration

-}
type RefundResultState
    = PBERRORREFUNDRESULT
    | UNDEFINEDREFUNDRESULT
    | RefundResultStateUnrecognized_ Int
