{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.XmrConnections exposing (addConnection, checkConnection, checkConnections, getBestAvailableConnection, getConnection, getConnections, removeConnection, setAutoSwitch, setConnection, startCheckingConnection, stopCheckingConnection)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `grpc.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

/////////////////////////////////////////////////////////////////////////////////////////
 XmrConnections
/////////////////////////////////////////////////////////////////////////////////////////


@docs addConnection, checkConnection, checkConnections, getBestAvailableConnection, getConnection, getConnections, removeConnection

@docs setAutoSwitch, setConnection, startCheckingConnection, stopCheckingConnection

-}

import Grpc.Internal
import Proto.Io.Haveno.Protobuffer


{-| A template for a gRPC call to the method 'SetAutoSwitch' sending a `SetAutoSwitchRequest` to get back a `SetAutoSwitchReply`.

-}
setAutoSwitch :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.SetAutoSwitchRequest Proto.Io.Haveno.Protobuffer.SetAutoSwitchReply
setAutoSwitch =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "SetAutoSwitch"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeSetAutoSwitchRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeSetAutoSwitchReply
        }


{-| A template for a gRPC call to the method 'GetBestAvailableConnection' sending a `GetBestAvailableConnectionRequest` to get back a `GetBestAvailableConnectionReply`.

-}
getBestAvailableConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetBestAvailableConnectionRequest Proto.Io.Haveno.Protobuffer.GetBestAvailableConnectionReply
getBestAvailableConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetBestAvailableConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetBestAvailableConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetBestAvailableConnectionReply
        }


{-| A template for a gRPC call to the method 'StopCheckingConnection' sending a `StopCheckingConnectionRequest` to get back a `StopCheckingConnectionReply`.

-}
stopCheckingConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.StopCheckingConnectionRequest Proto.Io.Haveno.Protobuffer.StopCheckingConnectionReply
stopCheckingConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "StopCheckingConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeStopCheckingConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeStopCheckingConnectionReply
        }


{-| A template for a gRPC call to the method 'StartCheckingConnection' sending a `StartCheckingConnectionRequest` to get back a `StartCheckingConnectionReply`.

-}
startCheckingConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.StartCheckingConnectionRequest Proto.Io.Haveno.Protobuffer.StartCheckingConnectionReply
startCheckingConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "StartCheckingConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeStartCheckingConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeStartCheckingConnectionReply
        }


{-| A template for a gRPC call to the method 'CheckConnections' sending a `CheckConnectionsRequest` to get back a `CheckConnectionsReply`.

-}
checkConnections :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.CheckConnectionsRequest Proto.Io.Haveno.Protobuffer.CheckConnectionsReply
checkConnections =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "CheckConnections"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeCheckConnectionsRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeCheckConnectionsReply
        }


{-| A template for a gRPC call to the method 'CheckConnection' sending a `CheckConnectionRequest` to get back a `CheckConnectionReply`.

-}
checkConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.CheckConnectionRequest Proto.Io.Haveno.Protobuffer.CheckConnectionReply
checkConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "CheckConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeCheckConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeCheckConnectionReply
        }


{-| A template for a gRPC call to the method 'SetConnection' sending a `SetConnectionRequest` to get back a `SetConnectionReply`.

-}
setConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.SetConnectionRequest Proto.Io.Haveno.Protobuffer.SetConnectionReply
setConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "SetConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeSetConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeSetConnectionReply
        }


{-| A template for a gRPC call to the method 'GetConnections' sending a `GetConnectionsRequest` to get back a `GetConnectionsReply`.

-}
getConnections :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetConnectionsRequest Proto.Io.Haveno.Protobuffer.GetConnectionsReply
getConnections =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetConnections"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetConnectionsRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetConnectionsReply
        }


{-| A template for a gRPC call to the method 'GetConnection' sending a `GetConnectionRequest` to get back a `GetConnectionReply`.

-}
getConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetConnectionRequest Proto.Io.Haveno.Protobuffer.GetConnectionReply
getConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetConnectionReply
        }


{-| A template for a gRPC call to the method 'RemoveConnection' sending a `RemoveConnectionRequest` to get back a `RemoveConnectionReply`.

-}
removeConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.RemoveConnectionRequest Proto.Io.Haveno.Protobuffer.RemoveConnectionReply
removeConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "RemoveConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeRemoveConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeRemoveConnectionReply
        }


{-| A template for a gRPC call to the method 'AddConnection' sending a `AddConnectionRequest` to get back a `AddConnectionReply`.

-}
addConnection :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.AddConnectionRequest Proto.Io.Haveno.Protobuffer.AddConnectionReply
addConnection =
    Grpc.Internal.Rpc
        { service = "XmrConnections"
        , package = "io.haveno.protobuffer"
        , rpcName = "AddConnection"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeAddConnectionRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeAddConnectionReply
        }
