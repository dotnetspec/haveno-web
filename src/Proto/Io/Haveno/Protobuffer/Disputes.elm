{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.Disputes exposing (getDispute, getDisputes, openDispute, resolveDispute, sendDisputeChatMessage)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `grpc.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

/////////////////////////////////////////////////////////////////////////////////////////
 Disputes
/////////////////////////////////////////////////////////////////////////////////////////


@docs getDispute, getDisputes, openDispute, resolveDispute, sendDisputeChatMessage

-}

import Grpc.Internal
import Proto.Io.Haveno.Protobuffer


{-| A template for a gRPC call to the method 'SendDisputeChatMessage' sending a `SendDisputeChatMessageRequest` to get back a `SendDisputeChatMessageReply`.

-}
sendDisputeChatMessage :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.SendDisputeChatMessageRequest Proto.Io.Haveno.Protobuffer.SendDisputeChatMessageReply
sendDisputeChatMessage =
    Grpc.Internal.Rpc
        { service = "Disputes"
        , package = "io.haveno.protobuffer"
        , rpcName = "SendDisputeChatMessage"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeSendDisputeChatMessageRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeSendDisputeChatMessageReply
        }


{-| A template for a gRPC call to the method 'ResolveDispute' sending a `ResolveDisputeRequest` to get back a `ResolveDisputeReply`.

-}
resolveDispute :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.ResolveDisputeRequest Proto.Io.Haveno.Protobuffer.ResolveDisputeReply
resolveDispute =
    Grpc.Internal.Rpc
        { service = "Disputes"
        , package = "io.haveno.protobuffer"
        , rpcName = "ResolveDispute"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeResolveDisputeRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeResolveDisputeReply
        }


{-| A template for a gRPC call to the method 'OpenDispute' sending a `OpenDisputeRequest` to get back a `OpenDisputeReply`.

-}
openDispute :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.OpenDisputeRequest Proto.Io.Haveno.Protobuffer.OpenDisputeReply
openDispute =
    Grpc.Internal.Rpc
        { service = "Disputes"
        , package = "io.haveno.protobuffer"
        , rpcName = "OpenDispute"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeOpenDisputeRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeOpenDisputeReply
        }


{-| A template for a gRPC call to the method 'GetDisputes' sending a `GetDisputesRequest` to get back a `GetDisputesReply`.

-}
getDisputes :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetDisputesRequest Proto.Io.Haveno.Protobuffer.GetDisputesReply
getDisputes =
    Grpc.Internal.Rpc
        { service = "Disputes"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetDisputes"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetDisputesRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetDisputesReply
        }


{-| A template for a gRPC call to the method 'GetDispute' sending a `GetDisputeRequest` to get back a `GetDisputeReply`.

-}
getDispute : Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.GetDisputeRequest Proto.Io.Haveno.Protobuffer.GetDisputeReply
getDispute =
    Grpc.Internal.Rpc
        { service = "Disputes"
        , package = "io.haveno.protobuffer"
        , rpcName = "GetDispute"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeGetDisputeRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeGetDisputeReply
        }
