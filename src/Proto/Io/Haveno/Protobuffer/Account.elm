{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Io.Haveno.Protobuffer.Account exposing (accountExists, changePassword, closeAccount, createAccount, deleteAccount, isAccountOpen, isAppInitialized, openAccount, restoreAccount)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 4.0.3
- `protoc` 3.12.4
- the following specification files: `grpc.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.

/////////////////////////////////////////////////////////////////////////////////////////
 Account
/////////////////////////////////////////////////////////////////////////////////////////


@docs accountExists, changePassword, closeAccount, createAccount, deleteAccount, isAccountOpen, isAppInitialized, openAccount, restoreAccount

-}

import Grpc.Internal
import Proto.Io.Haveno.Protobuffer


{-| A template for a gRPC call to the method 'RestoreAccount' sending a `RestoreAccountRequest` to get back a `RestoreAccountReply`.

-}
restoreAccount :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.RestoreAccountRequest Proto.Io.Haveno.Protobuffer.RestoreAccountReply
restoreAccount =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "RestoreAccount"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeRestoreAccountRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeRestoreAccountReply
        }


{-| A template for a gRPC call to the method 'DeleteAccount' sending a `DeleteAccountRequest` to get back a `DeleteAccountReply`.

-}
deleteAccount :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.DeleteAccountRequest Proto.Io.Haveno.Protobuffer.DeleteAccountReply
deleteAccount =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "DeleteAccount"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeDeleteAccountRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeDeleteAccountReply
        }


{-| A template for a gRPC call to the method 'CloseAccount' sending a `CloseAccountRequest` to get back a `CloseAccountReply`.

-}
closeAccount :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.CloseAccountRequest Proto.Io.Haveno.Protobuffer.CloseAccountReply
closeAccount =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "CloseAccount"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeCloseAccountRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeCloseAccountReply
        }


{-| A template for a gRPC call to the method 'ChangePassword' sending a `ChangePasswordRequest` to get back a `ChangePasswordReply`.

-}
changePassword :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.ChangePasswordRequest Proto.Io.Haveno.Protobuffer.ChangePasswordReply
changePassword =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "ChangePassword"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeChangePasswordRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeChangePasswordReply
        }


{-| A template for a gRPC call to the method 'IsAppInitialized' sending a `IsAppInitializedRequest` to get back a `IsAppInitializedReply`.

-}
isAppInitialized :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.IsAppInitializedRequest Proto.Io.Haveno.Protobuffer.IsAppInitializedReply
isAppInitialized =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "IsAppInitialized"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeIsAppInitializedRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeIsAppInitializedReply
        }


{-| A template for a gRPC call to the method 'OpenAccount' sending a `OpenAccountRequest` to get back a `OpenAccountReply`.

-}
openAccount :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.OpenAccountRequest Proto.Io.Haveno.Protobuffer.OpenAccountReply
openAccount =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "OpenAccount"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeOpenAccountRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeOpenAccountReply
        }


{-| A template for a gRPC call to the method 'CreateAccount' sending a `CreateAccountRequest` to get back a `CreateAccountReply`.

-}
createAccount :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.CreateAccountRequest Proto.Io.Haveno.Protobuffer.CreateAccountReply
createAccount =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "CreateAccount"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeCreateAccountRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeCreateAccountReply
        }


{-| A template for a gRPC call to the method 'IsAccountOpen' sending a `IsAccountOpenRequest` to get back a `IsAccountOpenReply`.

-}
isAccountOpen :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.IsAccountOpenRequest Proto.Io.Haveno.Protobuffer.IsAccountOpenReply
isAccountOpen =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "IsAccountOpen"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeIsAccountOpenRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeIsAccountOpenReply
        }


{-| A template for a gRPC call to the method 'AccountExists' sending a `AccountExistsRequest` to get back a `AccountExistsReply`.

-}
accountExists :
    Grpc.Internal.Rpc Proto.Io.Haveno.Protobuffer.AccountExistsRequest Proto.Io.Haveno.Protobuffer.AccountExistsReply
accountExists =
    Grpc.Internal.Rpc
        { service = "Account"
        , package = "io.haveno.protobuffer"
        , rpcName = "AccountExists"
        , encoder = Proto.Io.Haveno.Protobuffer.encodeAccountExistsRequest
        , decoder = Proto.Io.Haveno.Protobuffer.decodeAccountExistsReply
        }
