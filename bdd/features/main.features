### **Feature: MVP Mobile Tor-Based Haveno Web App**
Gherkin/BDD scenarios describing the behavior of a mobile Tor-based web app that communicates with a Haveno daemon via HTTPS to handle hardware wallet transactions. The app will use the hardware wallet as the sole form of identity, and no additional authorization is required.

Main is for functionality that persists across all pages (e.g. Dis/Connected indicator)

-- NOTE: For simplicity, 'And' and 'Then' are just 'When' in the code

#### **Background:**
**Given** the user has a mobile device with the Tor Browser installed 
**And**  the user has a hardware wallet (henceforth 'hww') (e.g., Ledger Nano X) either connected or not to the device
**And**  there is an HTTPS server running a Haveno daemon configured for securely handling transactions
**And**  the Haveno-Web app is connected to the Internet

#### **Scenario 1: Popup warning that the hardware wallet is NOT connected on application start**

**Given** the web app is opened
**And** the LNS hww is NOT detected
**And** it should ensure the navigation menu is disabled
**Then** it should display a message informing the user not connected
**And** it should not display the 'Connected' indicator in the background
**And** it should NOT display the 'XMR Wallet address' indicator in the background




#### **Scenario 2: hww NOT connected, user clicks the 'Connect Hardware' button, navs to Hardware page**

**Given** the web app is opened
**And** the LNS hww is NOT connected
**When** the user clicks the 'Connect Hardware' button
**Then** it hides the popup
**And** it should display the Hardware page
**And** it should display the 'Connected' indicator as Disconnected (red)


#### **Scenario 3: If the the LNS hardware wallet is already connected, indicate this and nav to Dashbooard page**
   **Given** the web app is opened
   **When** the LNS hww is detected
   **Then** the popup should not be visible
   **And** it should determine the LNS hww type
   **And** it should display a constant (no matter which page on) text indicator that the LNS is connected
   **Then** it should display the dashboard

#### **Scenario 4: Connecting the XMR Hardware Wallet**

**Given** the user accesses the Hardware page
**And** the user has the hardware device connected to their mobile device 
**And** the user has opened the XMR wallet on the device
**When** the user clicks the "Connect XMR Wallet" feature
**Then** it should display a confirmation message indicating successful XMR wallet connection
**And** it should display the address


#### **Scenario 5: Display the Haveno core app version number**

**Given** the app is open
**Then** the user can view the correct Haveno version in the footer



### **Summary**

These scenarios outline the critical interactions between the mobile Tor-based web app and the user-buildable APK leveraging a Haveno daemon. 
he scenarios cover essential functions like accessing the web app, connecting hardware wallets, initiating and handling transactions, and 
ensuring secure communication.

