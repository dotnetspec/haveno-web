### **Feature: MVP Mobile Tor-Based Haveno Web App**
Gherkin/BDD scenarios describing the behavior of a mobile Tor-based web app that communicates with a Haveno daemon via HTTPS to handle hardware wallet transactions. The app will use the hardware wallet as the sole form of identity, and no additional authorization is required.

Main is for functionality that persists across all pages (e.g. Dis/Connected indicator)

-- NOTE: For simplicity, 'And' and 'Then' are just 'When' in the code

#### **Background:**
**Given** the user has a mobile device with the Tor Browser installed 
**And**  the user has a hardware wallet (henceforth 'hww') (e.g., Ledger Nano X) either connected or not to the device
**And**  there is an HTTPS server running a Haveno daemon configured for securely handling transactions
**And**  the Haveno-Web app is connected to the Internet

#### **Scenario 1: Popup warning that the hardware device is NOT connected on application start**

**Given** the web app is opened
**And** the LNS hww is NOT detected
**And** it should ensure the navigation menu is disabled
**Then** it should display a message informing the user not connected
**And** it should not display the 'Connected' indicator in the background
**And** it should NOT display the 'XMR Wallet address' indicator in the background
**And** it should ensure the navigation menu is disabled
**And** it should NOT be possible to see the Hardware page


#### **Scenario 2: hww NOT connected, user clicks the 'Connect Hardware' button, navs to Hardware page**

**Given** the web app is opened
**And** the LNS hww is NOT connected
**When** the user clicks the 'Connect Hardware' button
**Then** it hides the popup
**And** it should display the Hardware page
**And** it should display the 'Connected' indicator as Disconnected (red)
**And** it should ensure the navigation menu is disabled


#### **Scenario 3: If the the LNS/LNX device is already connected, indicate this and nav to Hardware page**
   **Given** the web app is opened
   **When** the LNS/LNX hww is detected
   **Then** the popup should not be visible
   **And** it should determine the LNS/LNX hww type
   **And** it should display a constant (no matter which page on) text indicator that the LNS/LNX is connected
   **Then** it should display the hardware page
   **And** it should NOT be possible to use the Menu

#### **Scenario 4: Before the XMR Hardware Wallet Is Connected**

**Given** the user accesses the Hardware page
**And** the user has the hardware device connected to their mobile device 
**And** the user has opened the XMR wallet on the device
**Then** it hides the popup
**And** it should display the Hardware page
**And** it should display the 'XMR Wallet Not Connected' indicator in red
**And** it should ensure the navigation menu is disabled

type XmrWalletAddressErrors = 
    NoDeviceORDeviceLocked String -- Must be handling a user gesture to show a permission request
    | DeviceUnlocked_XMRWalletClosed String -- UNKNOWN_APDU
    | DeviceUnlocked_XMRWalletOpen String -- CLA_NOT_SUPPORTED

#### **Scenario 5a: Fetching an XMR address from the Hardware Wallet - success**

**Given** the user accesses the Hardware page
**And** the user has the hardware device connected to their mobile device 
**And** the user has opened the XMR wallet on the device
**When** the user clicks the "Connect XMR Wallet" feature
**And** the device returns a connection success message
**Then** it should display a confirmation message indicating successful XMR wallet connection
**And** it should display the address
**And** it should display the Dashboard page
**And** it should ensure the navigation menu is enabled

#### **Scenario 5b: Fetching an XMR address from the Hardware Wallet - failure**

**Given** the user accesses the Hardware page
**And** the user has the hardware device connected to their mobile device 
**And** the user has opened the XMR wallet on the device
**When** the user clicks the "Connect XMR Wallet" feature
**And** the device returns an error
**Then** it should display the 'XMR Wallet Not Connected' indicator in red
**And** it should ensure the navigation menu is disabled
 

#### **Scenario 6: Show a message that the Haveno core app is not yet connected**  

**Given** the web app is opened
**When** the user clicks the 'Connect Hardware' button  
**And** the LNS hardware wallet is detected  
**And** the Monero wallet address is retrieved from the hardware  
**Then** the popup should be hidden  
**And** the app location should be root 
**And** the hwd should be connected
**And** the footer should display "No Haveno version available"  
**And** the Dashboard page should be displayed  
**And** the model should reflect the current page as the Dashboard page
**And** it should ensure the navigation menu is disabled
  

#### **Scenario 7: Show the Haveno core app version in the footer**  

**Given** the web app is opened  
**And** the app is configured to fetch version data successfully  
**When** the user clicks the 'Connect Hardware' button  
**And** the LNS hardware wallet is detected  
**And** the Monero wallet address is retrieved from the hardware  
**Then** the app location should be root 
**And** the Dashboard page should be displayed  
**And** the model should reflect the current page as the Dashboard page  
**And** the footer should display the version number "1.0.7"
**And** it should ensure the navigation menu is enabled

#### **Scenario 8: User confirms hware device connection in browser**  

**Given** the web app is opened  
**And** the hwd is indicating that a user permission gesture is required
**When** the user clicks the 'Continue' button  
**And** the LNS/LNX hardware wallet is not detected  
**And** the hwd is still indicating that a user permission gesture is required  
**Then** the model should reflect the current page as the Hardware page  
**And** the user clicks the Grant Browser Permission button
**And** the browser grants permission
**Then** it should display a message informing the user connected

#### **Scenario 9: User unable to confirm hware device connection in browser**  

**Given** the web app is opened  
**And** the hwd is indicating that a user permission gesture is required
**When** the user clicks the 'Continue' button  
**When** the LNS/LNX hardware wallet is not detected  
**And** the hwd is still indicating that a user permission gesture is required  
**Then** the model should reflect the current page as the Hardware page  
**And** the user clicks the Grant Browser Permission button
**And** the browser does not grant permission
**And** the hwd is still indicating that a user permission gesture is required
**Then** it should display a message informing the user their mobile browser may not 
be compatible with hwd usage and suggest working mobile browser versions

#### **Scenario 10: Device connected - use mock xmr address to nav to Dashboard**  

**Given** the user accesses the Hardware page
**And** the user has the hardware device connected to their mobile device 
**And** the user has opened the XMR wallet on the device
**When** the user clicks the "Temp Got XMR Address" feature
**And** the device returns a connection success message
**Then** it should display a confirmation message indicating successful XMR wallet connection
**And** it should display the address
**And** it should display the Dashboard page
**And** it should ensure the navigation menu is enabled



### **Summary**

These scenarios outline the critical interactions between the mobile Tor-based web app and the user-buildable APK leveraging a Haveno daemon. 
he scenarios cover essential functions like accessing the web app, connecting hardware wallets, initiating and handling transactions, and 
ensuring secure communication.

